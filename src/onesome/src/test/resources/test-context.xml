<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

    <context:component-scan base-package="kr.or.onesome">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="uploadFolder" class="java.lang.String">
        <constructor-arg value="C:\Users\PC-28\Desktop\finalproject\src\onesome\src\main\webapp\resources\upload"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <!--  <property name="driverClassName"
            value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url"
            value="jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>-->
        <property name="driverClassName"
                  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
        <property name="url"
                  value="jdbc:log4jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>

        <property name="username" value="team3_202306F"/>
        <property name="password" value="java"/>

        <property name="initialSize" value="2"/>
        <property name="maxTotal" value="3"/>
    </bean>

    <!-- 데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 sqlSession 객체를 생성 1) dataSource
        2) 매퍼 xml의 위치 지정. / : src/main/resources/ -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations"
                  value="classpath:/sqlmap/acnt_SQL.xml"/>
        <property name="configLocation"
                  value="classpath:/mybatisAlias.xml"/>
    </bean>
    <!-- Mybatis DB 프로그램의 자동화 객체 -> template -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- Mapper 인터페이스 객체 생성 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="kr.or.onesome.*.mapper" />
    </bean>

    <!-- 파일업로드 설정  -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--
            파일업로드 용량 (20MB)
            최대 업로드 가능한 바이트 사이즈( -1로 설정할 경우 언리미티드! 제한없음!)
        -->
        <property name="maxUploadSize" value="52428800" />
        <property name="maxInMemorySize" value="10485760" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <!-- 파일업로드 디렉토리 설정 -->
    <bean id="uploadPath" class="java.lang.String">
        <constructor-arg value="c:\\upload" />
    </bean>

    <!-- 트랜잭션 관리자의 빈을 정의 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 어노테이션 기반의 트랜잭션 제어를 활성화 -->
    <tx:annotation-driven />

    <!-- 스프링 AOP 활성화 -->
    <aop:aspectj-autoproxy>
    </aop:aspectj-autoproxy>

    <!-- 메일발송을 위한 설정객체 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="username" value="manduckdev@gmail.com"/>
        <property name="password" value="wqciuqjtxubshklt"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>

    <!-- 문자발송을 위한 설정객체  -->
    <bean id="messageService" class="net.nurigo.sdk.message.service.DefaultMessageService">

        <constructor-arg index="0" value="NCSXSTZ2YM2TICHK"/> <!-- apiKey -->
        <constructor-arg index="1" value="K2DORRCTLNFTJZZCISQYBZROM2H21JV5"/> <!-- apiSecretKey -->
        <constructor-arg index="2" value="https://api.coolsms.co.kr"/> <!-- 도메인 -->
    </bean>

    <bean id="smsSenderNo" class="java.lang.String">
        <constructor-arg value="01028543586"/>
    </bean>
    <!-- 문자발송을 위한 설정객체 끝 -->

</beans>
